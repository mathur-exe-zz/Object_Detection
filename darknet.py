# -*- coding: utf-8 -*-
"""darknet.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1W4MfE1GPL9CeFhMwZ9e17zPrX1gsiEmc
"""

from __future__ import division 
import numpy as np

import torch
import torch.nn as nn
import torch.nn.functional as F
from torch.autograd import Variable

def parse_cfg(cfgfile):
  """
  - Take a config files adn returns a list of block. 
  - Each block describes a block in nn that need to be built
  - Block is in form of a dictionary 
  
  The attribute of blocks and their values are stores as key-val pairs in dict
  
  """

  # Saving the content of the cfg file in string format
  file = open(cfgfile, 'r')
  lines = file.read().split('\n')                   # store the lines in a list 
  lines = [x for x in lines if len(x) > 0]          # ignoreing empty lines
  lines = [x for x in lines if x[0] != '#']         # get rid of comments
  lines = [x.rstrip().lstrip() for x in lines]      # get rid of whitespce to the right and left of word

  #looping over the resultant lines to bet blocks
  block = {}
  blocks = []
  for line in lines:
    if line[0] == '[':                      # '[' this marks the start of a new block
      if len(block) != 0:                   # !block.empty  --> block is storing some values 
        blocks.append(block)                # 
        block = {}
      block['type'] = line[1:-1]
    else:
      key, value = line.split('=')
      block[key.rstrip()] = value.lstrip()
  blocks.append(block)

  return blocks

